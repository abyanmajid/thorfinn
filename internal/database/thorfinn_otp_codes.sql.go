// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: thorfinn_otp_codes.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createOtpCode = `-- name: CreateOtpCode :one
INSERT INTO thorfinn_otp_codes (id, code, expires_at) VALUES ($1, $2, $3) RETURNING id, code, created_at, updated_at, expires_at
`

type CreateOtpCodeParams struct {
	ID        string
	Code      string
	ExpiresAt pgtype.Timestamptz
}

func (q *Queries) CreateOtpCode(ctx context.Context, arg CreateOtpCodeParams) (ThorfinnOtpCode, error) {
	row := q.db.QueryRow(ctx, createOtpCode, arg.ID, arg.Code, arg.ExpiresAt)
	var i ThorfinnOtpCode
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExpiresAt,
	)
	return i, err
}

const deleteOtpCode = `-- name: DeleteOtpCode :exec
DELETE FROM thorfinn_otp_codes WHERE id = $1
`

func (q *Queries) DeleteOtpCode(ctx context.Context, id string) error {
	_, err := q.db.Exec(ctx, deleteOtpCode, id)
	return err
}

const findOtpCodeById = `-- name: FindOtpCodeById :one
SELECT id, code, created_at, updated_at, expires_at FROM thorfinn_otp_codes WHERE id = $1
`

func (q *Queries) FindOtpCodeById(ctx context.Context, id string) (ThorfinnOtpCode, error) {
	row := q.db.QueryRow(ctx, findOtpCodeById, id)
	var i ThorfinnOtpCode
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExpiresAt,
	)
	return i, err
}
